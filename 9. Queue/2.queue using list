#include <stdlib.h>
#include <stdio.h>

struct node {
    int data;
    struct node* next;
};

typedef struct node NODE;

struct node* front = NULL;
struct node* rear = NULL;

void enqueue(int element) {
    NODE* new_node = (NODE*)malloc(sizeof(NODE));
    new_node->data = element;
    new_node->next = NULL;

    if (front == NULL && rear == NULL) {
        front = rear = new_node;
    } else {
        rear->next = new_node;
        rear = new_node;
    }
}

int dequeue() {
    int element;
    if (front == NULL) {
        printf("Queue is empty\n");
        return -1;
    }

    NODE* temp = front;
    element = temp->data;
    if (front == rear) {
        front = rear = NULL;
    } else {
        front = front->next;
    }
    free(temp);
    return element;
}

void printQueue() {
    if (front == NULL) {
        printf("Queue is empty\n");
        return;
    }

    NODE* temp = front;
    printf("Queue elements: ");
    while (temp != NULL) {
        printf("%d ", temp->data);
        temp = temp->next;
    }
    printf("\n");
}

int main() {
    enqueue(10);
    enqueue(20);
    enqueue(30);
    printQueue();

    printf("Dequeued element: %d\n", dequeue());
    printQueue();

    return 0;
}
